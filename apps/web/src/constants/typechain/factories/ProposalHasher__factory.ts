/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  ProposalHasher,
  ProposalHasherInterface,
} from "../ProposalHasher";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_targets",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_values",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "_calldatas",
        type: "bytes[]",
      },
      {
        internalType: "bytes32",
        name: "_descriptionHash",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_proposer",
        type: "address",
      },
    ],
    name: "hashProposal",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

export class ProposalHasher__factory {
  static readonly abi = _abi;
  static createInterface(): ProposalHasherInterface {
    return new utils.Interface(_abi) as ProposalHasherInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ProposalHasher {
    return new Contract(address, _abi, signerOrProvider) as ProposalHasher;
  }
}
