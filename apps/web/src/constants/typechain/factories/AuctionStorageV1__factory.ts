/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  AuctionStorageV1,
  AuctionStorageV1Interface,
} from "../AuctionStorageV1";

const _abi = [
  {
    inputs: [],
    name: "auction",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "highestBid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "highestBidder",
        type: "address",
      },
      {
        internalType: "uint40",
        name: "startTime",
        type: "uint40",
      },
      {
        internalType: "uint40",
        name: "endTime",
        type: "uint40",
      },
      {
        internalType: "bool",
        name: "settled",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract Token",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506101a0806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80637d9f6db51461003b578063fc0c546a14610125575b600080fd5b6003546004546005546100cd92919073ffffffffffffffffffffffffffffffffffffffff81169064ffffffffff74010000000000000000000000000000000000000000820481169179010000000000000000000000000000000000000000000000000081049091169060ff7e010000000000000000000000000000000000000000000000000000000000009091041686565b60408051968752602087019590955273ffffffffffffffffffffffffffffffffffffffff9093169385019390935264ffffffffff90811660608501529091166080830152151560a082015260c0015b60405180910390f35b6002546101459073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161011c56fea26469706673582212203ac5d62c963dacc16664be8efc42da2abeed62997aeba3c54e16f061b52374b864736f6c63430008100033";

type AuctionStorageV1ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AuctionStorageV1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AuctionStorageV1__factory extends ContractFactory {
  constructor(...args: AuctionStorageV1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AuctionStorageV1> {
    return super.deploy(overrides || {}) as Promise<AuctionStorageV1>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AuctionStorageV1 {
    return super.attach(address) as AuctionStorageV1;
  }
  override connect(signer: Signer): AuctionStorageV1__factory {
    return super.connect(signer) as AuctionStorageV1__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AuctionStorageV1Interface {
    return new utils.Interface(_abi) as AuctionStorageV1Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AuctionStorageV1 {
    return new Contract(address, _abi, signerOrProvider) as AuctionStorageV1;
  }
}
