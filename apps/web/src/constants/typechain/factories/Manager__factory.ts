/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Manager, ManagerInterface } from "../Manager";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenImpl",
        type: "address",
      },
      {
        internalType: "address",
        name: "_metadataImpl",
        type: "address",
      },
      {
        internalType: "address",
        name: "_auctionImpl",
        type: "address",
      },
      {
        internalType: "address",
        name: "_treasuryImpl",
        type: "address",
      },
      {
        internalType: "address",
        name: "_governorImpl",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ADDRESS_ZERO",
    type: "error",
  },
  {
    inputs: [],
    name: "ALREADY_INITIALIZED",
    type: "error",
  },
  {
    inputs: [],
    name: "DELEGATE_CALL_FAILED",
    type: "error",
  },
  {
    inputs: [],
    name: "FOUNDER_REQUIRED",
    type: "error",
  },
  {
    inputs: [],
    name: "INITIALIZING",
    type: "error",
  },
  {
    inputs: [],
    name: "INVALID_TARGET",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "impl",
        type: "address",
      },
    ],
    name: "INVALID_UPGRADE",
    type: "error",
  },
  {
    inputs: [],
    name: "NOT_INITIALIZING",
    type: "error",
  },
  {
    inputs: [],
    name: "ONLY_CALL",
    type: "error",
  },
  {
    inputs: [],
    name: "ONLY_DELEGATECALL",
    type: "error",
  },
  {
    inputs: [],
    name: "ONLY_OWNER",
    type: "error",
  },
  {
    inputs: [],
    name: "ONLY_PENDING_OWNER",
    type: "error",
  },
  {
    inputs: [],
    name: "ONLY_PROXY",
    type: "error",
  },
  {
    inputs: [],
    name: "ONLY_UUPS",
    type: "error",
  },
  {
    inputs: [],
    name: "UNSUPPORTED_UUID",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "metadata",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "auction",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "treasury",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "governor",
        type: "address",
      },
    ],
    name: "DAODeployed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "version",
        type: "uint256",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "canceledOwner",
        type: "address",
      },
    ],
    name: "OwnerCanceled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "pendingOwner",
        type: "address",
      },
    ],
    name: "OwnerPending",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "prevOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "baseImpl",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "upgradeImpl",
        type: "address",
      },
    ],
    name: "UpgradeRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "baseImpl",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "upgradeImpl",
        type: "address",
      },
    ],
    name: "UpgradeRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "impl",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "auctionImpl",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cancelOwnershipTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "contractVersion",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "wallet",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "ownershipPct",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "vestExpiry",
            type: "uint256",
          },
        ],
        internalType: "struct IManager.FounderParams[]",
        name: "_founderParams",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "initStrings",
            type: "bytes",
          },
        ],
        internalType: "struct IManager.TokenParams",
        name: "_tokenParams",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "reservePrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "duration",
            type: "uint256",
          },
        ],
        internalType: "struct IManager.AuctionParams",
        name: "_auctionParams",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "timelockDelay",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "votingDelay",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "votingPeriod",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "proposalThresholdBps",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "quorumThresholdBps",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "vetoer",
            type: "address",
          },
        ],
        internalType: "struct IManager.GovParams",
        name: "_govParams",
        type: "tuple",
      },
    ],
    name: "deploy",
    outputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "metadata",
        type: "address",
      },
      {
        internalType: "address",
        name: "auction",
        type: "address",
      },
      {
        internalType: "address",
        name: "treasury",
        type: "address",
      },
      {
        internalType: "address",
        name: "governor",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "getAddresses",
    outputs: [
      {
        internalType: "address",
        name: "metadata",
        type: "address",
      },
      {
        internalType: "address",
        name: "auction",
        type: "address",
      },
      {
        internalType: "address",
        name: "treasury",
        type: "address",
      },
      {
        internalType: "address",
        name: "governor",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getDAOVersions",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "token",
            type: "string",
          },
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
          {
            internalType: "string",
            name: "auction",
            type: "string",
          },
          {
            internalType: "string",
            name: "treasury",
            type: "string",
          },
          {
            internalType: "string",
            name: "governor",
            type: "string",
          },
        ],
        internalType: "struct IManager.DAOVersionInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLatestVersions",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "token",
            type: "string",
          },
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
          {
            internalType: "string",
            name: "auction",
            type: "string",
          },
          {
            internalType: "string",
            name: "treasury",
            type: "string",
          },
          {
            internalType: "string",
            name: "governor",
            type: "string",
          },
        ],
        internalType: "struct IManager.DAOVersionInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governorImpl",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_baseImpl",
        type: "address",
      },
      {
        internalType: "address",
        name: "_upgradeImpl",
        type: "address",
      },
    ],
    name: "isRegisteredUpgrade",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "metadataImpl",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_baseImpl",
        type: "address",
      },
      {
        internalType: "address",
        name: "_upgradeImpl",
        type: "address",
      },
    ],
    name: "registerUpgrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_baseImpl",
        type: "address",
      },
      {
        internalType: "address",
        name: "_upgradeImpl",
        type: "address",
      },
    ],
    name: "removeUpgrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "safeTransferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenImpl",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treasuryImpl",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newImpl",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newImpl",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x61014060408190523060805262002f50388190039081908339810160408190526200002a9162000158565b600054610100900460ff161580158062000048575060005460ff1615155b801562000078575062000066306200013560201b620019fc1760201c565b8062000078575060005460ff16600114155b15620000975760405163439a74c960e01b815260040160405180910390fd5b6000805460ff191660011790558015620000bb576000805461ff0019166101001790555b6001600160a01b0380871660a05285811660c05284811660e05283811661010052821661012052801562000129576000805461ff0019169055604051600181527fbe9b076dc5b65990cca9dd9d7366682482e7817a6f6bc7f4faf4dc32af497f329060200160405180910390a15b505050505050620001c8565b3b151590565b80516001600160a01b03811681146200015357600080fd5b919050565b600080600080600060a086880312156200017157600080fd5b6200017c866200013b565b94506200018c602087016200013b565b93506200019c604087016200013b565b9250620001ac606087016200013b565b9150620001bc608087016200013b565b90509295509295909350565b60805160a05160c05160e0516101005161012051612cd66200027a6000396000818161020f01528181610f07015261188501526000818161032101528181610e8701526118550152600081816102eb01528181610e0701526118250152600081816102b501528181610d8901526117f501526000818161065601528181610ce001526117c5015260008181610855015281816108b001528181610a8901528181610ae40152610bdd0152612cd66000f3fe6080604052600436106200019f5760003560e01c806379ba509711620000e7578063c4d66de81162000089578063f2fde38b1162000060578063f2fde38b14620005f8578063f3d93f1e146200061d578063ffc4992f146200064257600080fd5b8063c4d66de8146200058e578063d560fd2d14620005b3578063e30c397814620005cb57600080fd5b8063906f634311620000be578063906f6343146200045e5780639bb8dcfd1462000509578063a0a8e460146200053f57600080fd5b806379ba509714620003ee578063852e98fc14620004065780638da5cb5b146200042b57600080fd5b80633af4b97c11620001515780634f1ef28611620001285780634f1ef286146200034357806352d1902d146200035a57806361ae74b9146200038157600080fd5b80633af4b97c14620002a1578063428eb53814620002d75780634dfbbdaa146200030d57600080fd5b8063264aa22a1162000186578063264aa22a14620001fb5780633659cfe61462000257578063395db2cd146200027c57600080fd5b806323452b9c14620001a4578063239cad4f14620001be575b600080fd5b348015620001b157600080fd5b50620001bc62000678565b005b348015620001cb57600080fd5b50620001e3620001dd3660046200207b565b6200074b565b604051620001f2919062002112565b60405180910390f35b3480156200020857600080fd5b50620002317f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001620001f2565b3480156200026457600080fd5b50620001bc620002763660046200207b565b6200083e565b3480156200028957600080fd5b50620001bc6200029b3660046200207b565b6200099d565b348015620002ae57600080fd5b50620002317f000000000000000000000000000000000000000000000000000000000000000081565b348015620002e457600080fd5b50620002317f000000000000000000000000000000000000000000000000000000000000000081565b3480156200031a57600080fd5b50620002317f000000000000000000000000000000000000000000000000000000000000000081565b620001bc6200035436600462002296565b62000a72565b3480156200036757600080fd5b506200037262000bc3565b604051908152602001620001f2565b3480156200038e57600080fd5b50620003a6620003a036600462002370565b62000c5a565b6040805173ffffffffffffffffffffffffffffffffffffffff968716815294861660208601529285169284019290925283166060830152909116608082015260a001620001f2565b348015620003fb57600080fd5b50620001bc620013ba565b3480156200041357600080fd5b50620001bc6200042536600462002438565b620014c5565b3480156200043857600080fd5b5060005462010000900473ffffffffffffffffffffffffffffffffffffffff1662000231565b3480156200046b57600080fd5b50620004c86200047d3660046200207b565b73ffffffffffffffffffffffffffffffffffffffff90811660009081526003602081905260409091208054600182015460028301549290930154908416949284169391821692911690565b6040805173ffffffffffffffffffffffffffffffffffffffff95861681529385166020850152918416918301919091529091166060820152608001620001f2565b3480156200051657600080fd5b506200052e6200052836600462002438565b620015b7565b6040519015158152602001620001f2565b3480156200054c57600080fd5b50604080518082018252600581527f312e322e3000000000000000000000000000000000000000000000000000000060208201529051620001f2919062002470565b3480156200059b57600080fd5b50620001bc620005ad3660046200207b565b620015f4565b348015620005c057600080fd5b50620001e362001781565b348015620005d857600080fd5b5060015473ffffffffffffffffffffffffffffffffffffffff1662000231565b3480156200060557600080fd5b50620001bc620006173660046200207b565b620018b1565b3480156200062a57600080fd5b50620001bc6200063c36600462002438565b62001914565b3480156200064f57600080fd5b50620002317f000000000000000000000000000000000000000000000000000000000000000081565b60005462010000900473ffffffffffffffffffffffffffffffffffffffff163314620006d0576040517fd238ed5900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001546000805460405173ffffffffffffffffffffffffffffffffffffffff9384169362010000909204909116917f682679deecef4dcd49674845cc1e3a075fea9073680aa445a8207d5a4bdea3da91a3600180547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b6200077e6040518060a0016040528060608152602001606081526020016060815260200160608152602001606081525090565b600080600080620007d48673ffffffffffffffffffffffffffffffffffffffff90811660009081526003602081905260409091208054600182015460028301549290930154908416949284169391821692911690565b93509350935093506040518060a00160405280620007f28862001a02565b8152602001620008028662001a02565b8152602001620008128562001a02565b8152602001620008228462001a02565b8152602001620008328362001a02565b90529695505050505050565b73ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163003620008ae576040517f43d22ee900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16620009247f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff161462000972576040517fe74d90a000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6200097d8162001aaf565b6200099a8160405180602001604052806000815250600062001b07565b50565b60005462010000900473ffffffffffffffffffffffffffffffffffffffff163314620009f5576040517fd238ed5900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8381169182179092556000805460405192936201000090910416917f4f2638f5949b9614ef8d5e268cb51348ad7f434a34812bf64b6e95014fbd357e9190a350565b73ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016300362000ae2576040517f43d22ee900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1662000b587f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff161462000ba6576040517fe74d90a000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b62000bb18262001aaf565b62000bbf8282600162001b07565b5050565b60003073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161462000c35576040517f575bc92e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc90565b60008080808080808b8b828162000c755762000c7562002485565b62000c8d92602060609092020190810191506200207b565b91508173ffffffffffffffffffffffffffffffffffffffff160362000cde576040517f7c2e503b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000060405162000d0d9062002048565b73ffffffffffffffffffffffffffffffffffffffff9091168152604060208201819052600090820152606001604051809103906000f08015801562000d56573d6000803e3d6000fd5b506040519096507fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606088901b169081907f00000000000000000000000000000000000000000000000000000000000000009062000db49062002048565b73ffffffffffffffffffffffffffffffffffffffff90911681526040602082018190526000908201526060018190604051809103906000f590508015801562000e01573d6000803e3d6000fd5b509550807f000000000000000000000000000000000000000000000000000000000000000060405162000e349062002048565b73ffffffffffffffffffffffffffffffffffffffff90911681526040602082018190526000908201526060018190604051809103906000f590508015801562000e81573d6000803e3d6000fd5b509450807f000000000000000000000000000000000000000000000000000000000000000060405162000eb49062002048565b73ffffffffffffffffffffffffffffffffffffffff90911681526040602082018190526000908201526060018190604051809103906000f590508015801562000f01573d6000803e3d6000fd5b509350807f000000000000000000000000000000000000000000000000000000000000000060405162000f349062002048565b73ffffffffffffffffffffffffffffffffffffffff90911681526040602082018190526000908201526060018190604051809103906000f590508015801562000f81573d6000803e3d6000fd5b506040805160808101825273ffffffffffffffffffffffffffffffffffffffff808a1682528881166020808401918252898316848601908152838716606086019081528e8516600081815260039485905297909720955186549086167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216178755935160018701805491871691861691909117905590516002860180549186169185169190911790555193018054939092169216919091179055909350636097bf628d8d620010538e80620024b4565b8b8b896040518863ffffffff1660e01b81526004016200107a97969594939291906200256c565b600060405180830381600087803b1580156200109557600080fd5b505af1158015620010aa573d6000803e3d6000fd5b50505073ffffffffffffffffffffffffffffffffffffffff8716905063cce2df03620010d78c80620024b4565b8a6040518463ffffffff1660e01b8152600401620010f89392919062002653565b600060405180830381600087803b1580156200111357600080fd5b505af115801562001128573d6000803e3d6000fd5b50506040517fa6b63eb800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8a811660048301528581166024830152878116604483015260208d013560648301528c3560848301528816925063a6b63eb8915060a401600060405180830381600087803b158015620011b757600080fd5b505af1158015620011cc573d6000803e3d6000fd5b50506040517fcd6dc68700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff86811660048301528b3560248301528716925063cd6dc6879150604401600060405180830381600087803b1580156200124157600080fd5b505af115801562001256573d6000803e3d6000fd5b50505073ffffffffffffffffffffffffffffffffffffffff84169050632b4656c885896200128b60c08d0160a08e016200207b565b604080517fffffffff0000000000000000000000000000000000000000000000000000000060e087901b16815273ffffffffffffffffffffffffffffffffffffffff948516600482015292841660248401529216604482015260208c01356064820152908b0135608482015260608b013560a482015260808b013560c482015260e401600060405180830381600087803b1580156200132957600080fd5b505af11580156200133e573d6000803e3d6000fd5b50506040805173ffffffffffffffffffffffffffffffffffffffff8b811682528a811660208301528981168284015288811660608301528716608082015290517f456d2baf5a87d70e586ec06fb91c2d7849778dd41d80fa826a6ea5bf8d28e3a693509081900360a0019150a150509550955095509550959050565b60015473ffffffffffffffffffffffffffffffffffffffff1633146200140c576040517f065cd53100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000805460405133926201000090920473ffffffffffffffffffffffffffffffffffffffff16917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7691a360018054600080547fffffffffffffffffffff0000000000000000000000000000000000000000ffff1673ffffffffffffffffffffffffffffffffffffffff831662010000021790557fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b60005462010000900473ffffffffffffffffffffffffffffffffffffffff1633146200151d576040517fd238ed5900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82811660008181526002602090815260408083209486168084529482529182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600117905581519283528201929092527fab6a7dc54721d6a1a284ca865830f8981d6f12fbddb3618d1774b71c0036805991015b60405180910390a15050565b73ffffffffffffffffffffffffffffffffffffffff80831660009081526002602090815260408083209385168352929052205460ff165b92915050565b600054610100900460ff161580158062001612575060005460ff1615155b8015620016305750303b15158062001630575060005460ff16600114155b1562001668576040517f439a74c900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790558015620016c757600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b73ffffffffffffffffffffffffffffffffffffffff821662001715576040517f66e7950900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b620017208262001c69565b801562000bbf57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527fbe9b076dc5b65990cca9dd9d7366682482e7817a6f6bc7f4faf4dc32af497f3290602001620015ab565b620017b46040518060a0016040528060608152602001606081526020016060815260200160608152602001606081525090565b6040518060a00160405280620017ea7f000000000000000000000000000000000000000000000000000000000000000062001a02565b81526020016200181a7f000000000000000000000000000000000000000000000000000000000000000062001a02565b81526020016200184a7f000000000000000000000000000000000000000000000000000000000000000062001a02565b81526020016200187a7f000000000000000000000000000000000000000000000000000000000000000062001a02565b8152602001620018aa7f000000000000000000000000000000000000000000000000000000000000000062001a02565b9052919050565b60005462010000900473ffffffffffffffffffffffffffffffffffffffff16331462001909576040517fd238ed5900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6200099a8162001d23565b60005462010000900473ffffffffffffffffffffffffffffffffffffffff1633146200196c576040517fd238ed5900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82811660008181526002602090815260408083209486168084529482529182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016905581519283528201929092527f0ebd98f6f75e38ba2f0751378f5c86205cafca83e206cb62795f45fcea7283339101620015ab565b3b151590565b60608173ffffffffffffffffffffffffffffffffffffffff1663a0a8e4606040518163ffffffff1660e01b8152600401600060405180830381865afa92505050801562001a9157506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405262001a8e91908101906200268f565b60015b620015ee57505060408051602081019091526000815290565b919050565b60005462010000900473ffffffffffffffffffffffffffffffffffffffff1633146200099a576040517fd238ed5900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff161562001b425762001b3d8362001df0565b505050565b8273ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801562001bca575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820190925262001bc79181019062002706565b60015b62001c01576040517fc0bb20b200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc811462001c5b576040517f0849b49600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5062001b3d83838362001eab565b600054610100900460ff1662001cab576040517f624bb4ce00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080547fffffffffffffffffffff0000000000000000000000000000000000000000ffff166201000073ffffffffffffffffffffffffffffffffffffffff84169081029190911782556040519091907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a350565b6000805460405173ffffffffffffffffffffffffffffffffffffffff808516936201000090930416917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7691a36000805473ffffffffffffffffffffffffffffffffffffffff80841662010000027fffffffffffffffffffff0000000000000000000000000000000000000000ffff9092169190911790915560015416156200099a57600180547fffffffffffffffffffffffff000000000000000000000000000000000000000016905550565b803b62001e45576040517fc40d973400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8216600482015260240160405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b62001eb68362001edc565b60008251118062001ec45750805b1562001b3d5762001ed6838362001f33565b50505050565b62001ee78162001df0565b60405173ffffffffffffffffffffffffffffffffffffffff821681527fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b9060200160405180910390a150565b6060823b62001f6e576040517f37f2022900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808473ffffffffffffffffffffffffffffffffffffffff168460405162001f98919062002720565b600060405180830381855af49150503d806000811462001fd5576040519150601f19603f3d011682016040523d82523d6000602084013e62001fda565b606091505b509150915062001feb828262001ff4565b95945050505050565b6060821562002005575080620015ee565b815115620020165781518083602001fd5b6040517f62536b1000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610562806200273f83390190565b803573ffffffffffffffffffffffffffffffffffffffff8116811462001aaa57600080fd5b6000602082840312156200208e57600080fd5b620020998262002056565b9392505050565b60005b83811015620020bd578181015183820152602001620020a3565b50506000910152565b60008151808452620020e0816020860160208601620020a0565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081526000825160a060208401526200213060c0840182620020c6565b905060208401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0808584030160408601526200216e8383620020c6565b925060408601519150808584030160608601526200218d8383620020c6565b92506060860151915080858403016080860152620021ac8383620020c6565b925060808601519150808584030160a08601525062001feb8282620020c6565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715620022455762002245620021cc565b604052919050565b600067ffffffffffffffff8211156200226a576200226a620021cc565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b60008060408385031215620022aa57600080fd5b620022b58362002056565b9150602083013567ffffffffffffffff811115620022d257600080fd5b8301601f81018513620022e457600080fd5b8035620022fb620022f5826200224d565b620021fb565b8181528660208385010111156200231157600080fd5b816020840160208301376000602083830101528093505050509250929050565b6000602082840312156200234457600080fd5b50919050565b6000604082840312156200234457600080fd5b600060c082840312156200234457600080fd5b600080600080600061014086880312156200238a57600080fd5b853567ffffffffffffffff80821115620023a357600080fd5b818801915088601f830112620023b857600080fd5b813581811115620023c857600080fd5b896020606083028501011115620023de57600080fd5b602092830197509550908701359080821115620023fa57600080fd5b50620024098882890162002331565b9350506200241b87604088016200234a565b91506200242c87608088016200235d565b90509295509295909350565b600080604083850312156200244c57600080fd5b620024578362002056565b9150620024676020840162002056565b90509250929050565b602081526000620020996020830184620020c6565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112620024ea57600080fd5b83018035915067ffffffffffffffff8211156200250657600080fd5b6020019150368190038213156200251c57600080fd5b9250929050565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b60a0808252810187905260008860c08301825b8a811015620025d25773ffffffffffffffffffffffffffffffffffffffff620025a88462002056565b1682526020838101359083015260408084013590830152606092830192909101906001016200257f565b508381036020850152620025e881898b62002523565b925050506200260f604083018673ffffffffffffffffffffffffffffffffffffffff169052565b73ffffffffffffffffffffffffffffffffffffffff8416606083015273ffffffffffffffffffffffffffffffffffffffff8316608083015298975050505050505050565b6040815260006200266960408301858762002523565b905073ffffffffffffffffffffffffffffffffffffffff83166020830152949350505050565b600060208284031215620026a257600080fd5b815167ffffffffffffffff811115620026ba57600080fd5b8201601f81018413620026cc57600080fd5b8051620026dd620022f5826200224d565b818152856020838501011115620026f357600080fd5b62001feb826020830160208601620020a0565b6000602082840312156200271957600080fd5b5051919050565b6000825162002734818460208701620020a0565b919091019291505056fe60806040526040516105623803806105628339810160408190526100229161025c565b61002e82826000610035565b5050610346565b61003e8361006b565b60008251118061004b5750805b156100665761006483836100b360201b6100291760201c565b505b505050565b6100748161014a565b6040516001600160a01b03821681527fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b9060200160405180910390a150565b6060823b6100d4576040516337f2022960e01b815260040160405180910390fd5b600080846001600160a01b0316846040516100ef919061032a565b600060405180830381855af49150503d806000811461012a576040519150601f19603f3d011682016040523d82523d6000602084013e61012f565b606091505b50909250905061013f82826101e7565b925050505b92915050565b61015d816101e160201b6100e51760201c565b6101895760405163310365cd60e21b81526001600160a01b038216600482015260240160405180910390fd5b806101c07f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61021f60201b6100eb1760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b3b151590565b606082156101f6575080610144565b8151156102065781518083602001fd5b60405163062536b160e41b815260040160405180910390fd5b90565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561025357818101518382015260200161023b565b50506000910152565b6000806040838503121561026f57600080fd5b82516001600160a01b038116811461028657600080fd5b60208401519092506001600160401b03808211156102a357600080fd5b818501915085601f8301126102b757600080fd5b8151818111156102c9576102c9610222565b604051601f8201601f19908116603f011681019083821181831017156102f1576102f1610222565b8160405282815288602084870101111561030a57600080fd5b61031b836020830160208801610238565b80955050505050509250929050565b6000825161033c818460208701610238565b9190910192915050565b61020d806103556000396000f3fe60806040523661001357610011610017565b005b6100115b6100276100226100ee565b610133565b565b6060823b610063576040517f37f2022900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808473ffffffffffffffffffffffffffffffffffffffff168460405161008b91906101a8565b600060405180830381855af49150503d80600081146100c6576040519150601f19603f3d011682016040523d82523d6000602084013e6100cb565b606091505b50915091506100da8282610157565b925050505b92915050565b3b151590565b90565b600061012e7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b3660008037600080366000845af43d6000803e808015610152573d6000f35b3d6000fd5b606082156101665750806100df565b8151156101765781518083602001fd5b6040517f62536b1000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000825160005b818110156101c957602081860181015185830152016101af565b50600092019182525091905056fea2646970667358221220dc4d3f0096ef746736792d21828a33955017294e8f127fdabcf6bf06082a501464736f6c63430008100033a26469706673582212205cf3afb1dff2a9652d261c1a4d2bbbc8da4dbd387a6ee69f2fc0a852bd8566b464736f6c63430008100033";

type ManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Manager__factory extends ContractFactory {
  constructor(...args: ManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _tokenImpl: PromiseOrValue<string>,
    _metadataImpl: PromiseOrValue<string>,
    _auctionImpl: PromiseOrValue<string>,
    _treasuryImpl: PromiseOrValue<string>,
    _governorImpl: PromiseOrValue<string>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<Manager> {
    return super.deploy(
      _tokenImpl,
      _metadataImpl,
      _auctionImpl,
      _treasuryImpl,
      _governorImpl,
      overrides || {}
    ) as Promise<Manager>;
  }
  override getDeployTransaction(
    _tokenImpl: PromiseOrValue<string>,
    _metadataImpl: PromiseOrValue<string>,
    _auctionImpl: PromiseOrValue<string>,
    _treasuryImpl: PromiseOrValue<string>,
    _governorImpl: PromiseOrValue<string>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _tokenImpl,
      _metadataImpl,
      _auctionImpl,
      _treasuryImpl,
      _governorImpl,
      overrides || {}
    );
  }
  override attach(address: string): Manager {
    return super.attach(address) as Manager;
  }
  override connect(signer: Signer): Manager__factory {
    return super.connect(signer) as Manager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ManagerInterface {
    return new utils.Interface(_abi) as ManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Manager {
    return new Contract(address, _abi, signerOrProvider) as Manager;
  }
}
